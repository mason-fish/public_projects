pipeline {
  agent { docker 'golang:1.9.1-alpine3.6' }
  stages {
    stage('test') {
      steps {
        //List all our project files with 'go list ./... | grep -v /vendor/ | grep -v github.com | grep -v golang.org'
        //Push our project files relative to ./src
        sh 'cd $GOPATH && go list ./... | grep -v /vendor/ | grep -v github.com | grep -v golang.org > projectPaths'

        //Print them with 'awk '$0="./src/"$0' projectPaths' in order to get full relative path to $GOPATH
        def paths = sh returnStdout: true, script: """awk '\$0="./src/"\$0' projectPaths"""
        sh """cd $GOPATH && go test -race -cover ${paths}"""
      }
    }
  }
  post {
    always {
      echo 'Finished.'
    }
    success {
      echo 'Test passed.'
    }
    failure {
      echo 'Test failed.'
    }
  }
}
